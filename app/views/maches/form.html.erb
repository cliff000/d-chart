<h1>Record</h1>
<!-- 日付が範囲外だと警告を出す -->
<p><% if @inKC == false %>
    <font color="red">※デュエリストカップ2ndStageの開催時間外です。注意してください。</font>
<% end %></p>

<%= form_for(@match, url:{controller:'maches', action:'create'}) do |form| %>
    <div class="form-group">
        <label>自分のデッキ</label>
        <%= form.select :mydeck, @decks,
            {selected: @defaultDeck}, {class: 'form-control'} %>
        <%= form.text_field :mydeck, :placeholder => "デッキ名", 
            :value => @defaultDeck=="自分で入力する" ? @lastData.mydeck : "", :id => 'textfield_mydeck', :class => 'form-control' %>
    </div>
    
    <div class="form-group">
        <label>自分のスキル</label>
        <%= form.select :myskill, @skills,
            {selected: @defaultSkill}, {class: 'form-control'} %>
        <%= form.text_field :myskill, :placeholder => "スキル名",
            :value => @defaultSkill=="自分で入力する" ? @lastData.myskill : "", :id => 'textfield_myskill', :class => 'form-control' %>
    </div>
    
    <div class="form-group">
        <label>相手のデッキ</label>
        <%= form.select :oppdeck, @decks, {}, {class: 'form-control'} %>
        <%= form.text_field :oppdeck, :placeholder => "デッキ名",
            :id => 'textfield_oppdeck', :class => 'form-control' %>
    </div>

    <div class="form-group">
        <label>相手のスキル</label>
        <%= form.select :oppskill, @skills, {}, {selected: "", class: 'form-control'} %>
        <%= form.text_field :oppskill, :placeholder => "スキル名",
            :id => 'textfield_oppskill', :class => 'form-control' %>
    </div>

    <br>
    <div class="form-group">
        <div class="tab-wrap">
            <%= form.radio_button :victory, "勝ち", :class => 'tab-switch', checked: true %><label class="tab-label1" for="match_victory_勝ち">勝ち</label>
            <%= form.radio_button :victory, "負け", :class => 'tab-switch' %><label class="tab-label2" for="match_victory_負け">負け</label>
        </div>
    </div>

    <div class="form-group">
        <label>対戦後のDP</label>
        <%= form.text_field :dp, :class => 'form-control' %>
        <font color='gray'>( <label id=changedDP></label> )</font>
    </div>

    <div class="form-group">
        <div class="tab-wrap">
            <%= form.radio_button :order, "先行", :class => 'tab-switch' %><label class="tab-label1" for="match_order_先行">先行</label>
            <%= form.radio_button :order, "後攻", :class => 'tab-switch' %><label class="tab-label2" for="match_order_後攻">後攻</label>
        </div>
    </div>
    <br>

    <%= form.submit "送信", class:"btn btn-primary" %>
<% end %>

<script>
    //「自分で入力する」以外ならテキストボックスを無効化
    if($('#match_mydeck').val() != "自分で入力する"){ $('#textfield_mydeck').prop('disabled', true);  $('#textfield_mydeck').hide();}
    if($('#match_myskill').val() != "自分で入力する"){ $('#textfield_myskill').prop('disabled', true); $('#textfield_myskill').hide();}
    if($('#match_oppdeck').val() != "自分で入力する"){ $('#textfield_oppdeck').prop('disabled', true); $('#textfield_oppdeck').hide();}
    if($('#match_oppskill').val() != "自分で入力する"){ $('#textfield_oppskill').prop('disabled', true); $('#textfield_oppskill').hide();}

    $('#match_mydeck').change(function(){
        //スキルの自動入力
        $('#match_myskill').val(gon.major_skill[$('#match_mydeck').val()]);
        $('#textfield_myskill').prop('disabled', true);
        $('#textfield_myskill').hide();

        //「自分で入力する」ならテキストボックス表示
        if($('#match_mydeck').val() == "自分で入力する"){
            $('#textfield_mydeck').prop('disabled', false);
            $('#textfield_mydeck').show();
        }else{
            $('#textfield_mydeck').prop('disabled', true);
            $('#textfield_mydeck').hide();
        }
    });
    $('#match_myskill').change(function(){
        //「自分で入力する」ならテキストボックス表示
        if($('#match_myskill').val() == "自分で入力する"){
            $('#textfield_myskill').prop('disabled', false);
            $('#textfield_myskill').show();
        }else{
            $('#textfield_myskill').prop('disabled', true);
            $('#textfield_myskill').hide();
        }
    });
    $('#match_oppdeck').change(function(){
        //スキルの自動入力
        $('#match_oppskill').val(gon.major_skill[$('#match_oppdeck').val()]);
        $('#textfield_oppskill').prop('disabled', true);
        $('#textfield_oppskill').hide();

        //「自分で入力する」ならテキストボックス表示
        if($('#match_oppdeck').val() == "自分で入力する"){
            $('#textfield_oppdeck').prop('disabled', false);
            $('#textfield_oppdeck').show();
        }else{
            $('#textfield_oppdeck').prop('disabled', true);
            $('#textfield_oppdeck').hide();
        }
    });
    $('#match_oppskill').change(function(){
        //「自分で入力する」ならテキストボックス表示
        if($('#match_oppskill').val() == "自分で入力する"){
            $('#textfield_oppskill').prop('disabled', false);
            $('#textfield_oppskill').show();
        }else{
            $('#textfield_oppskill').prop('disabled', true);
            $('#textfield_oppskill').hide();
        }
    });

    //DP変化の処理
    $('#match_dp').val(gon.lastdp + 1000)
    $('#changedDP').text('増減 +1000')

    $('#match_victory_勝ち').change(function(){
        $('#match_dp').val(gon.lastdp + 1000)
        $('#changedDP').text('増減 +1000')
    });
    $('#match_victory_負け').change(function(){
        if(gon.lastdp - 1000 < 0){
            $('#match_dp').val(0)
            $('#changedDP').text('増減 -' + String(gon.lastdp))
        }else{
            $('#match_dp').val(gon.lastdp - 1000)
            $('#changedDP').text('増減 -1000')
        }
    });
    $('#match_dp').keyup(function(){
        var sub = $('#match_dp').val() - gon.lastdp
        if(sub > 0){
            $('#changedDP').text('増減 +' + String(sub))
            $('#match_victory_勝ち').prop('checked', true);
        }else{
            $('#changedDP').text('増減 ' + String(sub))
            $('#match_victory_負け').prop('checked', true);
        }
    });
    
    // 絞り込みを非表示
    document.getElementById("searchButton").setAttribute("disabled", true);
</script>

